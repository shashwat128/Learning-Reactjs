{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useState } from \"react\";\nconst useHttp = applyData => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequests = useCallback(async requestConfig => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, [applyData]);\n  return {\n    isLoading: isLoading,\n    error: error,\n    sendRequests: sendRequests\n    /*in this as the names are kept same,\r\n    it could siplmy be written as\r\n    {   isLoading,\r\n        error,\r\n        sendRequests, }\r\n    in modern javaScript\r\n     */\n  };\n};\n_s(useHttp, \"7YeY5ROoMygY7pP+Aj45hWEL9fQ=\");\nexport default useHttp;","map":{"version":3,"names":["useCallback","useState","useHttp","applyData","_s","isLoading","setIsLoading","error","setError","sendRequests","requestConfig","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["D:/Programming/JavaScript/Reactjs/Standard Approach/Section 16 - Custom Hooks/Project 2 - More Realistic/src/hooks/use-http.js"],"sourcesContent":["import { useCallback, useState } from \"react\";\r\n\r\nconst useHttp = (applyData) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const sendRequests = useCallback(\r\n    async (requestConfig) => {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      try {\r\n        const response = await fetch(requestConfig.url, {\r\n          method: requestConfig.method ? requestConfig.method : \"GET\",\r\n          headers: requestConfig.headers ? requestConfig.headers : {},\r\n          body: requestConfig.body ? JSON.stringify(requestConfig.body) : null,\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Request failed!\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        applyData(data);\r\n      } catch (err) {\r\n        setError(err.message || \"Something went wrong!\");\r\n      }\r\n      setIsLoading(false);\r\n    },\r\n    [applyData]\r\n  );\r\n\r\n  return {\r\n    isLoading: isLoading,\r\n    error: error,\r\n    sendRequests: sendRequests,\r\n    /*in this as the names are kept same,\r\n    it could siplmy be written as\r\n    {   isLoading,\r\n        error,\r\n        sendRequests, }\r\n    in modern javaScript\r\n     */\r\n  };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,YAAY,GAAGT,WAAW,CAC9B,MAAOU,aAAa,IAAK;IACvBJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,aAAa,CAACG,GAAG,EAAE;QAC9CC,MAAM,EAAEJ,aAAa,CAACI,MAAM,GAAGJ,aAAa,CAACI,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEL,aAAa,CAACK,OAAO,GAAGL,aAAa,CAACK,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEN,aAAa,CAACM,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACR,aAAa,CAACM,IAAI,CAAC,GAAG;MAClE,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACpC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCnB,SAAS,CAACkB,IAAI,CAAC;IACjB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IAClD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EACD,CAACH,SAAS,CACZ,CAAC;EAED,OAAO;IACLE,SAAS,EAAEA,SAAS;IACpBE,KAAK,EAAEA,KAAK;IACZE,YAAY,EAAEA;IACd;AACJ;AACA;AACA;AACA;AACA;AACA;EACE,CAAC;AACH,CAAC;AAACL,EAAA,CAzCIF,OAAO;AA2Cb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}