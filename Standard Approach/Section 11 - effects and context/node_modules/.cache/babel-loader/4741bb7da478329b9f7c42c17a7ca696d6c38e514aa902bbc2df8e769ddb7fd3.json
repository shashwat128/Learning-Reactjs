{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\JavaScript\\\\Reactjs\\\\Standard Approach\\\\Section 11 - effects and context\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useContext, useRef } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../Store/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\n//we dont need any data generated inside of the component function thus it is outside component function\n//outside of the scope of component function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  //what we dispatch as action will be an object because we set it to in emailChangeHandler\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  //initial state\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n//all the data required by this function will be passed down when executed by React, automatically.\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.trim().length > 5\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 5\n    };\n  }\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    //initial state for emailState snapshot\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const authCtx = useContext(AuthContext);\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Check\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    return () => {\n      console.log(\"clean\");\n      //clear last timer when new timer is set\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n  const emailChangeHandler = event => {\n    //the identifier will often be an object but could be any\n    //object has some field that hold some identifier\n    //convetnion of using type and all_caps\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n\n    // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    });\n\n    // setFormIsValid(\n    //   emailState.isValid &&\n    //     emailState.value.includes(\"@\") &&\n    //     event.target.value.trim().length > 5\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({\n      type: \"INPUT_bLUR\"\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {} else {}\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        label: \"E-Mail\",\n        type: \"email\",\n        isValid: emailIsValid,\n        value: emailState.value,\n        onChange: emailChangeHandler,\n        onBlur: validateEmailHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        label: \"Password\",\n        type: \"password\",\n        isValid: passwordIsValid,\n        value: passwordState.value,\n        onChange: passwordChangeHandler,\n        onBlur: validatePasswordHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Ier1amiG5WmFw12+WGsYCYj1L7o=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Input","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","_s","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","authCtx","emailInputRef","passwordInputRef","console","log","emailIsValid","passwordIsValid","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","id","label","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","actions","btn","_c","$RefreshReg$"],"sources":["D:/Programming/JavaScript/Reactjs/Standard Approach/Section 11 - effects and context/src/components/Login/Login.js"],"sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useReducer,\n  useContext,\n  useRef,\n} from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../Store/auth-context\";\nimport Input from \"../UI/Input/Input\";\n\n//we dont need any data generated inside of the component function thus it is outside component function\n//outside of the scope of component function\nconst emailReducer = (state, action) => {\n  //what we dispatch as action will be an object because we set it to in emailChangeHandler\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n\n  //initial state\n  return { value: \"\", isValid: false };\n};\n//all the data required by this function will be passed down when executed by React, automatically.\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 5 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 5 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    //initial state for emailState snapshot\n    value: \"\",\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const authCtx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  useEffect(() => {\n    console.log(\"EFFECT RUNNING\");\n\n    return () => {\n      console.log(\"EFFECT CLEANUP\");\n    };\n  }, []);\n\n  const { isValid: emailIsValid } = emailState;\n\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"Check\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      console.log(\"clean\");\n      //clear last timer when new timer is set\n      clearTimeout(identifier);\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    //the identifier will often be an object but could be any\n    //object has some field that hold some identifier\n    //convetnion of using type and all_caps\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n\n    // setFormIsValid(\n    //   emailState.isValid &&\n    //     emailState.value.includes(\"@\") &&\n    //     event.target.value.trim().length > 5\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    dispatchPassword({ type: \"INPUT_bLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (formIsValid) {\n      authCtx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailIsValid) {\n    } else {\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input\n          id=\"email\"\n          label=\"E-Mail\"\n          type=\"email\"\n          isValid={emailIsValid}\n          value={emailState.value}\n          onChange={emailChangeHandler}\n          onBlur={validateEmailHandler}\n        />\n\n        <Input\n          id=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          isValid={passwordIsValid}\n          value={passwordState.value}\n          onChange={passwordChangeHandler}\n          onBlur={validatePasswordHandler}\n        />\n\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}